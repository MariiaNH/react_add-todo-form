{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","App.tsx","api/todos.ts","index.tsx"],"names":["id","name","username","email","UserInfo","user","TodoInfo","todo","title","completed","className","TodoList","preparedTodos","map","toDo","classNames","userId","users","find","App","useState","todos","setTodos","newTitle","setNewTitle","choosedUser","setChoosedUser","isFormInvalid","setIsFormInvalid","action","method","onSubmit","event","preventDefault","newId","length","newUser","newTodo","currentTodos","value","placeholder","onChange","target","disabled","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0564ef29.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/user';\n\ntype Props = {\n  user: User | null;\n};\n\nexport const UserInfo: React.FC<Props | null> = ({ user }) => (\n  <>\n    {user && (\n      <div>\n        <p>\n          {user.name}\n        </p>\n\n        <p>\n          {user.email}\n        </p>\n      </div>\n    )}\n  </>\n);\n","import React from 'react';\nimport { ToDo } from '../../types/todo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  todo: ToDo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const { title, completed, user } = todo;\n\n  return (\n    <div className=\"todo__item\">\n      <h4 className=\"todo__item-title\">{title}</h4>\n\n      <UserInfo user={user} />\n\n      {\n        completed\n          ? (\n            <p> Complete </p>\n          )\n          : (\n            <p> Not completed! </p>\n          )\n      }\n    </div>\n  );\n};\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ToDo } from '../../types/todo';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\nimport { UserInfo } from '../UserInfo/UserInfo';\n\ntype Props = {\n  preparedTodos: ToDo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ preparedTodos }) => (\n  <ul className=\"todos\">\n    {preparedTodos.map(toDo => (\n      <li\n        key={toDo.id}\n        className={classNames('todos__item', `${toDo.completed ? 'todos__item--completed' : 'todos__item--not_completed'}`)}\n      >\n        <TodoInfo todo={toDo} />\n        <UserInfo user={toDo.user} />\n      </li>\n    ))}\n  </ul>\n);\n","import { FC, useState } from 'react';\nimport todosFromServer from './api/todos';\nimport users from './api/users';\nimport './App.scss';\nimport { TodoList } from './components/TodoList/TodoList';\n\nconst preparedTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: users.find(user => user.id === todo.userId) || null,\n}));\n\nexport const App: FC = () => {\n  const [todos, setTodos] = useState(preparedTodos);\n  const [newTitle, setNewTitle] = useState('');\n  const [choosedUser, setChoosedUser] = useState('Choose a user');\n  const [isFormInvalid, setIsFormInvalid] = useState(false);\n\n  const addNewTodo = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    const newId = todos[todos.length - 1].id + 1;\n    const newUser = users.find(user => user.name === choosedUser);\n\n    const newTodo = {\n      userId: newUser?.id || 0,\n      id: newId,\n      title: newTitle,\n      completed: false,\n      user: newUser || null,\n    };\n\n    if (newTitle.length > 0 && choosedUser !== 'Choose a user') {\n      setTodos((currentTodos) => [...currentTodos, newTodo]);\n\n      setNewTitle('');\n      setChoosedUser('Choose a user');\n      setIsFormInvalid(false);\n    } else {\n      setIsFormInvalid(true);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addNewTodo}\n      >\n        <div className=\"field\">\n          <span className=\"error\">Title:</span>\n          <textarea\n            name=\"title\"\n            data-cy=\"titleInput\"\n            value={newTitle}\n            placeholder=\"title\"\n            onChange={({ target }) => {\n              setNewTitle(target.value);\n            }}\n          />\n          {isFormInvalid && newTitle.length === 0\n            && 'Please enter the title'}\n        </div>\n\n        <div className=\"field\">\n          <span className=\"error\">User:</span>\n          <select\n            data-cy=\"userSelect\"\n            value={choosedUser}\n            onChange={({ target }) => {\n              setChoosedUser(target.value);\n            }}\n          >\n            <option disabled>\n              Choose a user\n            </option>\n            {users.map((user) => (\n              <option key={user.id} value={user.name}>\n                {user.name}\n              </option>\n            ))}\n          </select>\n          {isFormInvalid && choosedUser === 'Choose a user'\n            && 'Please choose a user'}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList preparedTodos={todos} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}